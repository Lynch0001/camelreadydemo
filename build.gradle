plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.camel:camel-netty-http:3.20.2'
    implementation 'org.apache.camel:camel-stream:3.20.2'
    implementation 'org.apache.camel:camel-bean:3.20.2'
    implementation 'org.apache.camel:camel-file:3.20.2'
    implementation 'org.apache.camel:camel-spring:3.20.2'
    implementation 'org.apache.camel:camel-spring-xml:3.20.2'
    implementation 'org.apache.camel:camel-xml-jaxb:3.20.2'
    implementation 'org.apache.camel:camel-xml-jaxp:3.20.2'
    implementation 'org.apache.camel:camel-spring-main:3.20.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.23.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.23.0'
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
    implementation "javax.activation:javax.activation-api:1.2.0"
    implementation "org.slf4j:slf4j-reload4j:2.0.12"
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': "com.example.camelreadydemo.CamelreadydemoApplication",
        )
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }}
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    with jar
}

artifacts {
    archives fatJar
}
